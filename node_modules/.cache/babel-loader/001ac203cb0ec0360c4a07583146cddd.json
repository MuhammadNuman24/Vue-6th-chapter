{"remainingRequest":"/home/numan/Desktop/Vue/vue-getting-started/06-component-communication/begin/vue-heroes/node_modules/babel-loader/lib/index.js!/home/numan/Desktop/Vue/vue-getting-started/06-component-communication/begin/vue-heroes/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/numan/Desktop/Vue/vue-getting-started/06-component-communication/begin/vue-heroes/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/numan/Desktop/Vue/vue-getting-started/06-component-communication/begin/vue-heroes/src/components/heroes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/numan/Desktop/Vue/vue-getting-started/06-component-communication/begin/vue-heroes/src/components/heroes.vue","mtime":1633334253576},{"path":"/home/numan/Desktop/Vue/vue-getting-started/06-component-communication/begin/vue-heroes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/numan/Desktop/Vue/vue-getting-started/06-component-communication/begin/vue-heroes/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/numan/Desktop/Vue/vue-getting-started/06-component-communication/begin/vue-heroes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/numan/Desktop/Vue/vue-getting-started/06-component-communication/begin/vue-heroes/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/home/numan/Desktop/Vue/vue-getting-started/06-component-communication/begin/vue-heroes/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/numan/Desktop/Vue/vue-getting-started/06-component-communication/begin/vue-heroes/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { format } from 'date-fns';\nimport { displayDateFormat, ourHeroes } from \"../shared\";\nexport default {\n  name: 'Heroes',\n  data: function data() {\n    return {\n      heroes: [],\n      selectedHero: undefined,\n      message: '',\n      capeMessage: ''\n    };\n  },\n  created: function created() {\n    this.loadHeroes();\n  },\n  computed: {\n    fullName: function fullName() {\n      return this.selectedHero ? \"\".concat(this.selectedHero.firstName, \" \").concat(this.selectedHero.lastName) : '';\n    }\n  },\n  methods: {\n    getHeroes: function () {\n      var _getHeroes = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", new Promise(function (resolve) {\n                  setTimeout(function () {\n                    return resolve(ourHeroes);\n                  }, 1500);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getHeroes() {\n        return _getHeroes.apply(this, arguments);\n      }\n\n      return getHeroes;\n    }(),\n    loadHeroes: function () {\n      var _loadHeroes = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.heroes = [];\n                this.message = 'getting the heroes, please be patient';\n                _context2.next = 4;\n                return this.getHeroes();\n\n              case 4:\n                this.heroes = _context2.sent;\n                this.message = '';\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadHeroes() {\n        return _loadHeroes.apply(this, arguments);\n      }\n\n      return loadHeroes;\n    }(),\n    cancelHero: function cancelHero() {\n      this.selectedHero = undefined;\n    },\n    saveHero: function saveHero() {\n      var _this = this;\n\n      var index = this.heroes.findIndex(function (h) {\n        return h.id === _this.selectedHero.id;\n      });\n      this.heroes.splice(index, 1, this.selectedHero);\n      this.heroes = _toConsumableArray(this.heroes);\n      this.selectedHero = undefined;\n    },\n    selectHero: function selectHero(hero) {\n      this.selectedHero = hero;\n    },\n    handleTheCapes: function handleTheCapes(newValue) {\n      var value = parseInt(newValue, 10);\n\n      switch (value) {\n        case 0:\n          this.capeMessage = 'Where is my cape?';\n          break;\n\n        case 1:\n          this.capeMessage = 'One is all I need';\n          break;\n\n        case 2:\n          this.capeMessage = 'Alway have a spare';\n          break;\n\n        default:\n          this.capeMessage = 'You can never have enough capes';\n          break;\n      }\n    }\n  },\n  watch: {\n    'selectedHero.capeCounter': {\n      immediate: true,\n      handler: function handler(newValue, oldValue) {\n        console.log(\"CapeCounter watcher evalauted. old=\".concat(oldValue, \", new=\").concat(newValue));\n        this.handleTheCapes(newValue);\n      }\n    }\n  },\n  filters: {\n    shortDate: function shortDate(value) {\n      return format(value, displayDateFormat);\n    }\n  }\n};",{"version":3,"sources":["heroes.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"content-container\">\n    <div class=\"section content-title-group\">\n      <h2 class=\"title\">Heroes</h2>\n      <div class=\"columns\">\n        <div class=\"column is-8\" v-if=\"heroes\">\n          <!-- <heroes-list> -->\n          <ul v-if=\"!selectedHero\">\n            <li v-for=\"hero in heroes\" :key=\"hero.id\">\n              <div class=\"card\">\n                <div class=\"card-content\">\n                  <div class=\"content\">\n                    <div :key=\"hero.name\" class=\"name\">\n                      {{ hero.firstName }} {{ hero.lastName }}\n                    </div>\n                    <div class=\"description\">{{ hero.description }}</div>\n                  </div>\n                </div>\n                <footer class=\"card-footer\">\n                  <button\n                    class=\"link card-footer-item\"\n                    @click=\"selectHero(hero)\"\n                  >\n                    <i class=\"fas fa-check\"></i>\n                    <span>Select</span>\n                  </button>\n                </footer>\n              </div>\n            </li>\n          </ul>\n          <!-- <heroes-list> -->\n\n          <!-- <hero-detail> -->\n          <div v-if=\"selectedHero\">\n            <div class=\"card\">\n              <header class=\"card-header\">\n                <p class=\"card-header-title\">{{ fullName }}</p>\n              </header>\n              <div class=\"card-content\">\n                <div class=\"content\">\n                  <div class=\"field\">\n                    <label class=\"label\" for=\"id\">id</label>\n                    <label class=\"input\" name=\"id\" readonly>{{\n                      selectedHero.id\n                    }}</label>\n                  </div>\n                  <div class=\"field\">\n                    <label class=\"label\" for=\"firstName\">first name</label>\n                    <input\n                      class=\"input\"\n                      name=\"firstName\"\n                      v-model=\"selectedHero.firstName\"\n                    />\n                  </div>\n                  <div class=\"field\">\n                    <label class=\"label\" for=\"lastName\">last name</label>\n                    <input\n                      class=\"input\"\n                      name=\"lastName\"\n                      v-model=\"selectedHero.lastName\"\n                    />\n                  </div>\n                  <div class=\"field\">\n                    <label class=\"label\" for=\"description\">description</label>\n                    <input\n                      class=\"input\"\n                      name=\"description\"\n                      v-model=\"selectedHero.description\"\n                    />\n                  </div>\n                  <div class=\"field\">\n                    <label class=\"label\" for=\"originDate\">origin date</label>\n                    <input\n                      type=\"date\"\n                      class=\"input\"\n                      id=\"originDate\"\n                      v-model=\"selectedHero.originDate\"\n                    />\n                    <p class=\"comment\">\n                      My origin story began on\n                      {{ selectedHero.originDate | shortDate }}\n                    </p>\n                  </div>\n                  <div class=\"field\">\n                    <label class=\"label\" for=\"capeCounter\">cape counter</label>\n                    <input\n                      class=\"input\"\n                      name=\"capeCounter\"\n                      type=\"number\"\n                      v-model=\"selectedHero.capeCounter\"\n                    />\n                  </div>\n                  <div class=\"field\">\n                    <label class=\"label\" for=\"capeMessage\">cape message</label>\n                    <label class=\"input\" name=\"capeMessage\">{{\n                      capeMessage\n                    }}</label>\n                  </div>\n                </div>\n              </div>\n              <footer class=\"card-footer\">\n                <button\n                  class=\"link card-footer-item cancel-button\"\n                  @click=\"cancelHero()\"\n                >\n                  <i class=\"fas fa-undo\"></i>\n                  <span>Cancel</span>\n                </button>\n                <button class=\"link card-footer-item\" @click=\"saveHero()\">\n                  <i class=\"fas fa-save\"></i>\n                  <span>Save</span>\n                </button>\n              </footer>\n            </div>\n          </div>\n          <!-- </hero-detail> -->\n\n          <div class=\"notification is-info\" v-show=\"message\">{{ message }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { format } from 'date-fns';\n\nimport { displayDateFormat, ourHeroes } from '../shared';\n\nexport default {\n  name: 'Heroes',\n  data() {\n    return {\n      heroes: [],\n      selectedHero: undefined,\n      message: '',\n      capeMessage: '',\n    };\n  },\n  created() {\n    this.loadHeroes();\n  },\n  computed: {\n    fullName() {\n      return this.selectedHero\n        ? `${this.selectedHero.firstName} ${this.selectedHero.lastName}`\n        : '';\n    },\n  },\n  methods: {\n    async getHeroes() {\n      return new Promise(resolve => {\n        setTimeout(() => resolve(ourHeroes), 1500);\n      });\n    },\n    async loadHeroes() {\n      this.heroes = [];\n      this.message = 'getting the heroes, please be patient';\n      this.heroes = await this.getHeroes();\n      this.message = '';\n    },\n    cancelHero() {\n      this.selectedHero = undefined;\n    },\n    saveHero() {\n      const index = this.heroes.findIndex(h => h.id === this.selectedHero.id);\n      this.heroes.splice(index, 1, this.selectedHero);\n      this.heroes = [...this.heroes];\n      this.selectedHero = undefined;\n    },\n    selectHero(hero) {\n      this.selectedHero = hero;\n    },\n    handleTheCapes(newValue) {\n      const value = parseInt(newValue, 10);\n      switch (value) {\n        case 0:\n          this.capeMessage = 'Where is my cape?';\n          break;\n        case 1:\n          this.capeMessage = 'One is all I need';\n          break;\n        case 2:\n          this.capeMessage = 'Alway have a spare';\n          break;\n        default:\n          this.capeMessage = 'You can never have enough capes';\n          break;\n      }\n    },\n  },\n  watch: {\n    'selectedHero.capeCounter': {\n      immediate: true,\n      handler(newValue, oldValue) {\n        console.log(\n          `CapeCounter watcher evalauted. old=${oldValue}, new=${newValue}`\n        );\n        this.handleTheCapes(newValue);\n      },\n    },\n  },\n  filters: {\n    shortDate: function(value) {\n      return format(value, displayDateFormat);\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}